name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  # Build and Test Stage
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3
      
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'
        cache: 'npm'
        
    - name: Install Dependencies
      run: npm install
      
    - name: Run Linting
      run: npm run lint --if-present
      
    - name: Run Tests
      run: npm test
      
    - name: Build Application
      run: npm run build
      
  # Security Scan Stage
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: build-and-test
    
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3
      
    - name: Run Security Audit
      run: npm audit --audit-level high
      
  # Docker Build Stage
  docker-build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: [build-and-test, security-scan]
    
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3
      
    - name: Build Docker Image
      run: docker build -t devops-demo:${{ github.sha }} .
      
    - name: Test Docker Image
      run: |
        docker run -d -p 3000:3000 --name test-container devops-demo:${{ github.sha }}
        sleep 10
        curl -f http://localhost:3000/health || exit 1
        docker stop test-container
        
  # Deploy to Staging (simulation)
  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: docker-build
    if: github.ref == 'refs/heads/develop'
    
    steps:
    - name: Deploy to Staging Environment
      run: |
        echo "Deploying to staging environment..."
        echo "Deployment successful to staging!"
        
  # Deploy to Production (simulation)
  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: docker-build
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Deploy to Production Environment
      run: |
        echo "Deploying to production environment..."
        echo "Production deployment successful!"
        echo "Application available at: https://your-app.com"
